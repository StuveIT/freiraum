---
import NavigationBar from './NavigationBar.astro';
import Card from './Card.astro';
---
<NavigationBar />

<Card>
  <div id="content">
</Card>
  
</div>

<script type="module">
  import { fetchAvailable } from '/js/room_events.js';

  const contentElem = document.getElementById("content");

  function displayUnreachable() {
    contentElem.innerHTML = `⚠️ Dein Browser konnte keine Anfrage an <a href="134.34.26.182">RoomRes</a> stellen. Das kann folgende Gründe haben: 
    <ul>
      <li>Du bist nicht im Uni-Netz. Falls du dich nicht an der Uni Konstanz aufhälst, kannst du ein VPN benutzen (Siehe: <a href="https://www.kim.uni-konstanz.de/e-mail-und-internet/eduvpn/">KIM Website</a>)</li>
      <li>Dein Browser upgraded deine HTTP Verbindung zu HTTPS. RoomRes ist gerade nur unter dem HTTP Protokoll erreichbar --- wir arbeiten mit dem KIM zusammen, um das zu verbessern</li>
      <li>RoomRes ist gerade nicht erreichbar</li>
    </ul>`;
  }

  function displayTable(roomsWithEvents, new_date) {
    const date_picker = document.createElement('input');
    date_picker.style = "width: 100%";
    date_picker.type = "date";
    date_picker.id = "date-picker";

    const timeline = document.createElement('table');
    timeline.classList.add('timeline');
    timeline.style = `
      display: block;
      overflow-x: scroll;
      width: 100%;
    `;
    const timeline_body = document.createElement('tbody');

    const timeline_header_row = document.createElement('tr');
    const thr_name = document.createElement('th');
    thr_name.innerText = 'Raum';
    timeline_header_row.appendChild(thr_name);

    const offset_hour = 8;    
    for (let i = offset_hour; i < 24; i++) {
      const thr_time = document.createElement('th');
      thr_time.classList.add('time');
      thr_time.dataset.time = i;
      thr_time.innerText = `${String(i).padStart(2, '0')}:00`;
      timeline_header_row.appendChild(thr_time);
    }

    timeline_body.appendChild(timeline_header_row);
    timeline.appendChild(timeline_body);

    roomsWithEvents.forEach(roomWithEvents => {
      const { room, events } = roomWithEvents;

      const tr_room_events = document.createElement('tr');
      const td_room = document.createElement('td');
      td_room.classList.add('room');
      td_room.innerText = room.name;
      tr_room_events.appendChild(td_room);

      // add events
      const trr_events_div = document.createElement('td');
      trr_events_div.classList.add('event-group');
      events.forEach(e => {
        const div_event = document.createElement('div');
        div_event.classList.add('event');

        const time_factor_offset = offset_hour;

        const time_factor_start = (e.time_start.getHours() - offset_hour) + (e.time_start.getMinutes() / 60);
        const time_factor_end = (e.time_end.getHours() - offset_hour) + e.time_end.getMinutes() / 60;
        const time_factor_span = time_factor_end - time_factor_start;
        div_event.innerText = e.name;
        div_event.title = `${e.name}\n${e.time_start}\n${e.time_end}`;
        div_event.style = `left: ${100 * time_factor_start}px; width: ${100 * time_factor_span}px`;
        
        trr_events_div.appendChild(div_event);
      });
      tr_room_events.appendChild(trr_events_div);

      timeline_body.appendChild(tr_room_events);
    });
    
    contentElem.innerHTML = date_picker.outerHTML + timeline.outerHTML;
  }

  const update = (new_date) => fetchAvailable(new_date).then(roomsWithEvents => {
    displayTable(roomsWithEvents);

    let datePicker = document.getElementById("date-picker");
    datePicker.valueAsDate = new_date ? new Date(new_date) : new Date();
    datePicker.addEventListener("change", e => {
      update(new Date(e.target.value))
    })
  }).catch((error) => {
    console.error(error);
    displayUnreachable();
  });
  update();
</script>
